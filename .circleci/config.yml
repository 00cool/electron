
version: 2
jobs:
  electron-linux-arm:
    docker:
      - image: electronbuilds/electron:0.0.3
        environment:
          TARGET_ARCH: arm
    steps:
      - checkout
      - run: sh -e /etc/init.d/xvfb start
      - run:
          name: Check for release
          command: |
            MESSAGE="$(git log --format=%B -n 1 HEAD)"
            case ${MESSAGE} in
              Bump* ) export ELECTRON_RELEASE=1 ;;
            esac
      - run:
         name: Bootstrap
         command: |
           if [ "$ELECTRON_RELEASE" == "1" ]; then
              script/bootstrap.py --target_arch=$TARGET_ARCH -v
           else
              script/bootstrap.py --target_arch=$TARGET_ARCH -v --dev
           fi
      - run: npm run lint
      - run:
         name: Build
         command: |
           if [ "$ELECTRON_RELEASE" == "1" ]; then
              script/build.py -c R
           else
              script/build.py -c D
           fi
      - run:
          name: Create distribution
          command: |
             if [ "$ELECTRON_RELEASE" == "1" ]; then
                script/create-dist.py
             fi
      - run:
          name: Upload distribution
          command: |
             if [ "$ELECTRON_RELEASE" == "1" ]; then
                script/upload.py
             fi

  electron-linux-ia32:
    docker:
      - image: electronbuilds/electron:0.0.3
        environment:
          TARGET_ARCH: ia32
    steps:
      - checkout
      - run: sh -e /etc/init.d/xvfb start
      - run:
          name: Check for release
          command: |
            MESSAGE="$(git log --format=%B -n 1 HEAD)"
            case ${MESSAGE} in
              Bump* ) export ELECTRON_RELEASE=1 ;;
            esac
      - run:
         name: Bootstrap
         command: |
           if [ "$ELECTRON_RELEASE" == "1" ]; then
              script/bootstrap.py --target_arch=$TARGET_ARCH -v
           else
              script/bootstrap.py --target_arch=$TARGET_ARCH -v --dev
           fi
      - run: npm run lint
      - run:
         name: Build
         command: |
           if [ "$ELECTRON_RELEASE" == "1" ]; then
              script/build.py -c R
           else
              script/build.py -c D
           fi
      - run:
          name: Create distribution
          command: |
             if [ "$ELECTRON_RELEASE" == "1" ]; then
                script/create-dist.py
             fi
      - run:
          name: Upload distribution
          command: |
             if [ "$ELECTRON_RELEASE" == "1" ]; then
                script/upload.py
             fi

  electron-linux-x64:
    docker:
      - image: electronbuilds/electron:0.0.3
        environment:
          TARGET_ARCH: x64
    steps:
      - checkout
      - run: sh -e /etc/init.d/xvfb start
      - run:
          name: Check for release
          command: |
            MESSAGE="$(git log --format=%B -n 1 HEAD)"
            case ${MESSAGE} in
              Bump* ) export ELECTRON_RELEASE=1 ;;
            esac
      - run:
         name: Bootstrap
         command: |
           if [ "$ELECTRON_RELEASE" == "1" ]; then
              script/bootstrap.py --target_arch=$TARGET_ARCH -v
           else
              script/bootstrap.py --target_arch=$TARGET_ARCH -v --dev
           fi
      - run: npm run lint
      - run:
         name: Build
         command: |
           if [ "$ELECTRON_RELEASE" == "1" ]; then
              script/build.py -c R
           else
              script/build.py -c D
           fi
      - run:
          name: Create distribution
          command: |
             if [ "$ELECTRON_RELEASE" == "1" ]; then
                script/create-dist.py
             fi
      - run:
          name: Upload distribution
          command: |
             if [ "$ELECTRON_RELEASE" == "1" ]; then
                script/upload.py
             fi
      - run:
          name: Test
          command: |
             if [ "$ELECTRON_RELEASE" -ne "1" ]; then
                script/test.py --ci
             fi
      - run:
          name: Verify FFMpeg
          command: |
             if [ "$ELECTRON_RELEASE" -ne "1" ]; then
                script/verify-ffmpeg.py
             fi

workflows:
  version: 2
  build-arm:
    jobs:
      - electron-linux-arm
  build-ia32:
    jobs:
      - electron-linux-ia32
  build-x64:
    jobs:
      - electron-linux-x64
